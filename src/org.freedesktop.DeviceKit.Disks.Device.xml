<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd" [
  <!ENTITY ERROR_GENERAL "org.freedesktop.DeviceKit.Disks.Device.GeneralError">
  <!ENTITY ERROR_NO_SUCH_DEVICE "org.freedesktop.DeviceKit.Disks.Device.NoSuchDevice">
  <!ENTITY ERROR_NOT_SUPPORTED "org.freedesktop.DeviceKit.Disks.Device.NotSupported">
  <!ENTITY ERROR_NOT_MOUNTABLE "org.freedesktop.DeviceKit.Disks.Device.NotMountable">
  <!ENTITY ERROR_MOUNTED "org.freedesktop.DeviceKit.Disks.Device.Mounted">
  <!ENTITY ERROR_NOT_MOUNTED "org.freedesktop.DeviceKit.Disks.Device.NotMounted">
  <!ENTITY ERROR_NOT_MOUNTED_BY_DK "org.freedesktop.DeviceKit.Disks.Device.NotMountedByDeviceKit">
  <!ENTITY ERROR_FSTAB_ENTRY "org.freedesktop.DeviceKit.Disks.Device.FstabEntry">
  <!ENTITY ERROR_MOUNT_OPTION_NOT_ALLOWED "org.freedesktop.DeviceKit.Disks.Device.MountOptionNotAllowed">
  <!ENTITY ERROR_FILESYSTEM_BUSY "org.freedesktop.DeviceKit.Disks.Device.FilesystemBusy">
  <!ENTITY ERROR_CANNOT_REMOUNT "org.freedesktop.DeviceKit.Disks.Device.CannotRemount">
  <!ENTITY ERROR_UNMOUNT_OPTION_NOT_ALLOWED "org.freedesktop.DeviceKit.Disks.Device.UnmountOptionNotAllowed">
  <!ENTITY ERROR_NO_JOB_IN_PROGRESS "org.freedesktop.DeviceKit.Disks.Device.NoJobInProgress">
  <!ENTITY ERROR_JOB_ALREADY_IN_PROGRESS "org.freedesktop.DeviceKit.Disks.Device.JobAlreadyInProgress">
  <!ENTITY ERROR_JOB_CANNOT_BE_CANCELLED "org.freedesktop.DeviceKit.Disks.Device.JobCannotBeCancelled">
  <!ENTITY ERROR_JOB_WAS_CANCELLED "org.freedesktop.DeviceKit.Disks.Device.JobWasCancelled">
  <!ENTITY ERROR_NOT_PARTITION "org.freedesktop.DeviceKit.Disks.Device.NotPartition">
  <!ENTITY ERROR_NOT_PARTITIONED "org.freedesktop.DeviceKit.Disks.Device.NotPartitioned">
  <!ENTITY ERROR_NOT_CRYPTO "org.freedesktop.DeviceKit.Disks.Device.NotCrypto">
  <!ENTITY ERROR_CRYPTO_ALREADY_UNLOCKED "org.freedesktop.DeviceKit.Disks.Device.CryptoAlreadyUnlocked">
  <!ENTITY ERROR_CRYPTO_NOT_UNLOCKED "org.freedesktop.DeviceKit.Disks.Device.CryptoNotUnlocked">
  <!ENTITY ERROR_IS_BUSY "org.freedesktop.DeviceKit.Disks.Device.IsBusy">
  <!ENTITY ERROR_NOT_DRIVE "org.freedesktop.DeviceKit.Disks.Device.NotDrive">
  <!ENTITY ERROR_NOT_SMART_CAPABLE "org.freedesktop.DeviceKit.Disks.Device.NotSmartCapable">
  <!ENTITY ERROR_NOT_LINUX_MD "org.freedesktop.DeviceKit.Disks.Device.NotLinuxMd">
  <!ENTITY ERROR_NOT_LINUX_MD_COMPONENT "org.freedesktop.DeviceKit.Disks.Device.NotLinuxMdComponent">
]>
<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <interface name="org.freedesktop.DeviceKit.Disks.Device">
      <doc:doc>
        <doc:description>
          <doc:para>
            This interface provides access to information about and
            operations on individual block devices.
          </doc:para>
          <doc:para>
            A general note about properties: the set of values
            returned can be expected to grow in the future as both
            hardware and operating system capabilities evolve.
            Care has been taken to namespace values
            so applications can properly fall back (see e.g.
            <doc:ref type="property" to="Device:drive-media-compatibility">drive-media-compatibility</doc:ref>)
            and export both general and specific properties (such as
            <doc:ref type="property" to="Device:id-usage">id-usage</doc:ref>
            vs.
            <doc:ref type="property" to="Device:id-type">id-type</doc:ref>).
            In general an empty string in a property means not
            set. Since the empty string is not a valid object path we
            use the "/" to mean "not set" for object paths.
          </doc:para>
        </doc:description>
      </doc:doc>

    <!-- ************************************************************ -->

    <method name="CancelJob">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>

      <doc:doc>
        <doc:description>
          <doc:para>
            Cancels a job in progress.
          </doc:para>
        </doc:description>
        <doc:permission>Callers need the org.freedesktop.devicekit.disks.format authorization</doc:permission>
        <doc:errors>
          <doc:error name="&ERROR_NO_JOB_IN_PROGRESS;">if no job is pending</doc:error>
          <doc:error name="&ERROR_JOB_CANNOT_BE_CANCELLED;">if job is not cancellable</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="CreatePartitionTable">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="scheme" direction="in" type="s">
        <doc:doc><doc:summary>
            The type of partition table to create. Currently
            the types 'none', 'mbr', 'gpt' and 'apm' are
            supported.
        </doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Supports erase= with values 'none', 'full', 'full3pass', 'full7pass' or 'full35pass'.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Creates a new partition table. Optionally deletes all data
            on the device before doing so.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="DeletePartition">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Supports erase= with values 'none', 'full', 'full3pass', 'full7pass' or 'full35pass'.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Deletes an entry from the partition table; optionally
            erasing the space before doing so.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_PARTITION;">if the device is not a partition</doc:error>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="ModifyPartition">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="type" direction="in" type="s">
        <doc:doc><doc:summary>
            The type of the partition to create. Depends
            on the partitioning scheme.
        </doc:summary></doc:doc>
      </arg>
      <arg name="label" direction="in" type="s">
        <doc:doc><doc:summary>
            The label to use for the partition. Leave
            blank if the partition table scheme doesn't
            support labels.
        </doc:summary></doc:doc>
      </arg>
      <arg name="flags" direction="in" type="as">
        <doc:doc><doc:summary>Flags to use for the partition (TODO).</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Modifies the meta data such as label and flags for a
            partition. TODO: Consider allowing changing offset and
            size. Or maybe that should be a separate method.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_PARTITION;">if the device is not a partition</doc:error>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="CreatePartition">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="offset" direction="in" type="t">
        <doc:doc><doc:summary>Where to create the partition.</doc:summary></doc:doc>
      </arg>
      <arg name="size" direction="in" type="t">
        <doc:doc><doc:summary>Size of the partitition to create.</doc:summary></doc:doc>
      </arg>
      <arg name="type" direction="in" type="s">
        <doc:doc><doc:summary>
            The type of the partition to create. Depends
            on the partitioning scheme.
        </doc:summary></doc:doc>
      </arg>
      <arg name="label" direction="in" type="s">
        <doc:doc><doc:summary>
            The label to use for the partition. Leave
            blank if the partition table scheme doesn't
            support labels.
        </doc:summary></doc:doc>
      </arg>
      <arg name="flags" direction="in" type="as">
        <doc:doc><doc:summary>Flags to use for the partition (TODO).</doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Currently unused.</doc:summary></doc:doc>
      </arg>
      <arg name="fstype" direction="in" type="s">
        <doc:doc><doc:summary>
            The file system to create in new partition. Leave
            blank to skip creating a file system. See the
            CreateFilesystem() method for details.
        </doc:summary></doc:doc>
      </arg>
      <arg name="fsoptions" direction="in" type="as">
        <doc:doc><doc:summary>
            Options to use for file system creation. See the
            CreateFilesystem() method for details.
        </doc:summary></doc:doc>
      </arg>
      <arg name="created_device" direction="out" type="o">
        <doc:doc><doc:summary>The object path of the newly added partition.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Create a new partition and, optionally, create a file
            system on it. The partition won't necessarily be created
            at the exact location requested due to disk geometry
            constraints.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_PARTITIONED;">if the device is not a partitition table</doc:error>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="CreateFilesystem">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="fstype" direction="in" type="s">
        <doc:doc><doc:summary>
            The type of file system to create. Pass "empty" to not
            create a file system. Use @TODO@ to get a list of file
            systems that can be created.
        </doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>
            Supports the following options. To set the label use
            label=NAME. May not be supported for all file systems and
            the allowed length varies (see @TODO@). To erase the
            device before creating a file system, pass erase= with one
            of the following values none, full, full3pass, full7pass,
            full35pass. To create the file system on an encrypted
            block device, pass encrypt= with the passphrase to use.
        </doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Create a file system on a device.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="ChangeFilesystemLabel">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="new_label" direction="in" type="s">
        <doc:doc><doc:summary>
            New label for file system. See the options parameter of
            CreateFilesystem() for discussion of valid labels.
        </doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Changes the file system label.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy and changing the label requires an unmounted file system</doc:error>
          <doc:error name="&ERROR_NOT_MOUNTABLE;">if the device is not a mountable file system</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="Mount">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="filesystem_type" direction="in" type="s">
        <doc:doc><doc:summary>File system type to use.</doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Mount Options. Valid mount options include 'remount' and other mount options accepted by the native mount program.</doc:summary></doc:doc>
      </arg>
      <arg name="mount_path" direction="out" type="s">
        <doc:doc><doc:summary>Where the device was mounted.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Mount the device.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_NOT_MOUNTABLE;">if the device is not a mountable file system</doc:error>
          <doc:error name="&ERROR_FSTAB_ENTRY;">if the device is referenced in the /etc/fstab file</doc:error>
          <doc:error name="&ERROR_MOUNT_OPTION_NOT_ALLOWED;">if an invalid or malformed mount option was given</doc:error>
          <doc:error name="&ERROR_MOUNTED;">if the device is already mounted</doc:error>
          <doc:error name="&ERROR_CANNOT_REMOUNT;">if the remount option was given and remounting the device failed</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="Unmount">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Unmount options. Valid options currently include only 'force'.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Unmount the device.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_UNMOUNT_OPTION_NOT_ALLOWED;">if an invalid or malformed unmount option was given</doc:error>
          <doc:error name="&ERROR_NOT_MOUNTED;">if the device is not mounted</doc:error>
          <doc:error name="&ERROR_NOT_MOUNTED_BY_DK;">if the device is not mounted by the DeviceKit-disks daemon</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="UnlockEncrypted">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="secret" direction="in" type="s">
        <doc:doc><doc:summary>Secret for unlocking the cleartext data.</doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Currently unused.</doc:summary></doc:doc>
      </arg>
      <arg name="cleartext_device" direction="out" type="o">
        <doc:doc><doc:summary>The cleartext device created.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Sets up a cleartext device using the given device as backing store.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_NOT_CRYPTO;">if the device is not encrypted</doc:error>
          <doc:error name="&ERROR_CRYPTO_ALREADY_UNLOCKED;">if the device is already unlocked</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="LockEncrypted">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Currently unused.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Tears down the cleartext device set up using
            e.g. the <doc:ref type="method"
            to="Device.UnlockEncrypted">UnlockEncrypted()</doc:ref>
            method.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_NOT_CRYPTO;">if the device is not encrypted</doc:error>
          <doc:error name="&ERROR_CRYPTO_NOT_UNLOCKED;">if the device is not unlocked</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="ChangeSecretForEncrypted">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="current_secret" direction="in" type="s">
        <doc:doc><doc:summary>The current secret.</doc:summary></doc:doc>
      </arg>
      <arg name="new_secret" direction="in" type="s">
        <doc:doc><doc:summary>The new secret.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Change the secret used to unlock an encrypted device.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_CRYPTO;">if the device is not encrypted</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="Erase">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Supports erase= with values 'none', 'full', 'full3pass', 'full7pass' or 'full35pass'.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Erase the contents of the device.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if the device is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="AddComponentToLinuxMdArray">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="component" direction="in" type="o">
        <doc:doc><doc:summary>Object path of the component to add</doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Currently unused.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Adds a component to a Linux md RAID array. Existing data
            on the given component will be erased.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_LINUX_MD;">device to add component to is not a Linux md RAID array</doc:error>
          <doc:error name="&ERROR_NO_SUCH_DEVICE;">given component doesn't exist</doc:error>
          <doc:error name="&ERROR_IS_BUSY;">component to add is busy</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="RemoveComponentFromLinuxMdArray">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="component" direction="in" type="o">
        <doc:doc><doc:summary>The component to remove from the array.</doc:summary></doc:doc>
      </arg>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Supports erase= with values 'none', 'full', 'full3pass', 'full7pass' or 'full35pass'.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Removes a component from a Linux md RAID array. The component
            will be removed and then the signatures on the component will be
            erased according to the erase= option.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_LINUX_MD;">device to remove component from is not a Linux md RAID array</doc:error>
          <doc:error name="&ERROR_NO_SUCH_DEVICE;">given component is not part of the array</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="StopLinuxMdArray">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="options" direction="in" type="as">
        <doc:doc><doc:summary>Currently unused.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Stops a Linux md RAID array.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_LINUX_MD;">device is not a Linux md RAID array</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <method name="RetrieveSmartData">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>

      <arg name="is_healthy" direction="out" type="b">
        <doc:doc><doc:summary>Returns an assessment of whether the drive is healthy or not.</doc:summary></doc:doc>
      </arg>
      <arg name="power_on_hours" direction="out" type="i">
        <doc:doc><doc:summary>Number of hours that the drive has been powered on.</doc:summary></doc:doc>
      </arg>
      <arg name="temperature" direction="out" type="i">
        <doc:doc><doc:summary>Temperature of the drive, in Celcius.</doc:summary></doc:doc>
      </arg>
      <arg name="last_self_test_result" direction="out" type="s">
        <doc:doc><doc:summary>Result of the last self test.</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Retrieves S.M.A.R.T. data from the device. TODO: We
            probably should return all attributes or something more
            detailed. And at the same time try to abstract the
            difference between SCSI and ATA.
          </doc:para>
          <doc:para>
            The result of last_self_test_result is a string; the following
            values are known:
            completed_ok,
            not_completed_aborted,
            not_completed_aborted_reset,
            not_completed_unknown_reason,
            completed_failed_unknown_reason,
            completed_failed_electrical,
            completed_failed_servo,
            completed_failed_read,
            completed_failed_damage,
            unknown,
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_NOT_SMART_CAPABLE;">device is not S.M.A.R.T. capable</doc:error>
          <doc:error name="&ERROR_NOT_DRIVE;">device is not a drive</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>


    <!-- ************************************************************ -->

    <method name="RunSmartSelftest">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>

      <arg name="test" direction="in" type="s">
        <doc:doc><doc:summary>
            The name of the test to run; supported values are 'short'
            (usually less than ten minutes) and 'long' (usually tens
            of minutes) and 'conveyance' (usually a few minutes). See
            the smartctl(1) man page for details.
        </doc:summary></doc:doc>
      </arg>
      <arg name="captive" direction="in" type="b">
        <doc:doc><doc:summary>
            If TRUE then the drive will block access to the drive for
            the duration of the test. The method will error out if the
            drive is busy, e.g. if partitions are mounted.
        </doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Runs a S.M.A.R.T. self test on the drive. TODO: need to figure out whether we need a return code.
          </doc:para>
        </doc:description>
        <doc:errors>
          <doc:error name="&ERROR_IS_BUSY;">if captive was selected and the device is busy</doc:error>
          <doc:error name="&ERROR_NOT_SMART_CAPABLE;">device is not S.M.A.R.T. capable</doc:error>
          <doc:error name="&ERROR_NOT_DRIVE;">device is not a drive</doc:error>
          <doc:error name="&ERROR_GENERAL;">if incoming parameters are invalid or an unknown error occured</doc:error>
          <doc:error name="&ERROR_JOB_WAS_CANCELLED;">if the job was cancelled</doc:error>
        </doc:errors>
      </doc:doc>
    </method>

    <!-- ************************************************************ -->

    <signal name="Changed">
      <doc:doc>
        <doc:description>
          <doc:para>
            Something on the device changed. Changes in job state wont
            trigger this signal; see the <doc:ref type="signal"
            to="Device::JobChanged">JobChanged()</doc:ref> signal.
          </doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <!-- ************************************************************ -->

    <signal name="JobChanged">
      <arg name="job-in-progress" type="b">
        <doc:doc><doc:summary>Whether a job is currently in progress.</doc:summary></doc:doc>
      </arg>
      <arg name="job-is-cancellable" type="b">
        <doc:doc><doc:summary>Whether the job is cancellable.</doc:summary></doc:doc>
      </arg>
      <arg name="job-id" type="s">
        <doc:doc><doc:summary>The identifier of the job.</doc:summary></doc:doc>
      </arg>
      <arg name="job-num-tasks" type="i">
        <doc:doc><doc:summary>Number of tasks in the job.</doc:summary></doc:doc>
      </arg>
      <arg name="job-cur-task" type="i">
        <doc:doc><doc:summary>Current task number (zero-based offset).</doc:summary></doc:doc>
      </arg>
      <arg name="job-cur-task-id" type="s">
        <doc:doc><doc:summary>Task identifier for current task.</doc:summary></doc:doc>
      </arg>
      <arg name="job-cur-task-percentage" type="d">
        <doc:doc><doc:summary>Percentage completed of current task (between 0 and 100, negative if unknown).</doc:summary></doc:doc>
      </arg>

      <doc:doc>
        <doc:description>
          <doc:para>
            Emitted when a job on a device changes. Clients should
            listen to this signal to avoid polling the daemon for job
            state.
          </doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <!-- ************************************************************ -->

    <!-- The 'native-path' property is the OS native path for the
         device; on Linux this is the sysfs path.

         The 'device-is-busy' property is set if the device is
         in use; this can hapen if it's mounted, if another
         block device is claiming it (e.g. a RAID drive) or if a
         job initiated from DeviceKit-disks is pending.
      -->
    <property name="native-path" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            OS specific native path of the device.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-file" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            UNIX special device file for device.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-file-by-id" type="as" access="read">
      <doc:doc><doc:description><doc:para>
            Symlinks to UNIX special device file that are stable and uniquely identifies the device.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-file-by-path" type="as" access="read">
      <doc:doc><doc:description><doc:para>
            Symlinks to UNIX special device file that uniquely identifies the port/partition the device is plugged into.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-partition" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device is a partition. See the properties starting with partition- for details.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-partition-table" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device contains a partition table. See partition- properties for details.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-removable" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device contains removable media.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-media-available" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if media is available in the device.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-read-only" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device read-only.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-drive" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device is a drive. See drive- properties for details.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-mounted" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device is mounted.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-mount-path" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            Where the device is mounted.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-crypto-cleartext" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if device is a cleartext device backed by a encrypted device. See crypto-cleartext- properties for details.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-busy" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if device is currently busy. Is set if the device is
            in use; this can hapen, for example, if the device is
            mounted, if another block device is claiming it (e.g. a
            RAID drive) or if a job initiated from DeviceKit-disks is
            pending.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-linux-md-component" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device is a Linux md RAID component. See linux-md-component- properties for details.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-is-linux-md" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE if the device is a Linux md RAID array. See linux-md- properties for details.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-size" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            The size of the device in bytes.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="device-block-size" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            The block size of the device in bytes.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- The job properties specify if a job initiated via the
         DeviceKit-disks daemon is currently in progress.  A job may
         be split into several sequential tasks; in that case
         'job-num-tasks' will be greater than zero. If it is 0 none
         of the 'job-cur-*' properties will be set.

         The 'job-id' property is used to identify the job and maps
         1-1 with the names of the method calls on this interface,
         e.g. 'Erase', 'CreateFilesystem' and so on.

         Note that the 'job-cur-task' percentage starts at 0.  The
         percentage is normally a number between 0 and 100. If set to -1
         it means the progress of the current is unknown. The task id is
         a well-defined name defining the current subtask of the job;
         known tasks id's are

          - zeroing: zeroing data on the device
          - sync:    flushing data to the device
          - mkfs:    creating file system
      -->
    <property name="job-in-progress" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            The job properties specify if a job initiated via the
            DeviceKit-disks daemon is currently in progress.  A job
            may be split into several sequential tasks; in that case
            <doc:ref type="property" to="Device:job-num-tasks">job-num-tasks</doc:ref>
            will be greater than one.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="job-id" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            This property is used to identify the job and maps 1-1
            with the names of the method calls on this interface,
            e.g. 'Erase', 'CreateFilesystem' and so on.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="job-is-cancellable" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            Whether the job can be cancelled
            using <doc:ref type="method"
            to="Device.CancelJob">CancelJob()</doc:ref> method.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="job-num-tasks" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            Number of tasks in the job..
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="job-cur-task" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            Current task number (zero-based offset).
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="job-cur-task-id" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            Task identifier for current task. TODO: enumerate task id's.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="job-cur-task-percentage" type="d" access="read">
      <doc:doc><doc:description><doc:para>
            Percentage completed of current task (between 0 and 100, negative if unknown).
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- the usage is a result of probing for signatures on the block
         device; known values are

           filesystem      - the device contains a file system; known
                             values for 'id-type' is the same as the
                             name of the OS fs driver e.g. 'vfat',
                             'ext3' and so on.

           crypto          - the device contains encrypted data. Known
                             values for 'id-type' are 'crypto_LUKS'.

           partitiontable  - the device is partitioned into other devices.
                             Known values for 'id-type' are
                              mbr  - Master Boot Record
                              embr - Extended Master Boot Record
                              apm  - Apple Partitoning Map
                              gpt  - GUID Partition Table

           raid            - the device is member of a RAID set or another
                             scheme that requires device assembly. Known
                             values for 'id-type' are TODO.

           other           - other signature found on the device

         The 'id-uuid' and 'id-label' properties, if set, are dependent
         on the 'id-type' property -->
    <property name="id-usage" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            A result of probing for signatures on the block device;
            known values are filesystem, crypto, partitiontable, raid
            and other. If blank, no known signature was detected.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="id-type" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            For id-usage=filesystem this property contains the file system name (e.g. ext3, vfat).
            For id-usage=crypto known values are crypto_LUKS.
            For id-usage=partitiontable known values are mbr (Master Boot Record),
            apm (Apple Partition) and gpt (GUID Partition Table).
            For id-usage=raid known values are @TODO@.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="id-version" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The version of the file system or identified data structure.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="id-uuid" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The UUID of the detected instance.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="id-label" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The user-visible label of the detected instance.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- The following properties are only set if the device is
         a clear text device for an encrypted block device (see
         the property 'device-is-crypto-cleartext').

         The property 'crypto-cleartext-slave' is a reference to the
         encrypted block device.
      -->
    <property name="crypto-cleartext-slave" type="o" access="read">
      <doc:doc><doc:description><doc:para>
            The encrypted device backing a crypto cleartext device.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-crypto-cleartext">device-is-crypto-cleartext</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- the following properties are only set if the device is
         a partition (see 'device-is-partition'). Known values
         for the partitioning scheme are

           mbr  - Master Boot Record
           embr - Extended Master Boot Record
           apm  - Apple Partitoning Map
           gpt  - GUID Partition Table

         The 'partition-slave' property specifies what device
         the device in question is a partition of. The property
         'partition-number' is the number of the partition starting
         from 1 -->
    <property name="partition-slave" type="o" access="read">
      <doc:doc><doc:description><doc:para>
            The object path of the parition table the partition is part of.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-scheme" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The scheme of the partition table this partition is part of.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-type" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The type of the partition (value depends on the partitioning scheme).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-label" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The label of the partition (blank if the partitioning scheme doesn't support labels).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-uuid" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The UUID of the partition (blank if the partitioning scheme doesn't support UUID's).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-flags" type="as" access="read">
      <doc:doc><doc:description><doc:para>
            Partition flags.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-number" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            Number of the partition.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-offset" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            Offset in bytes where the partition is located on the enclosing partition table device (see
            <doc:ref type="property" to="Device:device-is-partition">partition-slave</doc:ref>).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-size" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            Size of the partition.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition">device-is-partition</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- the type of partition table the deice contains; only set if
         'device-is-partition-table' is true. Known values are

           mbr  - Master Boot Record
           embr - Extended Master Boot Record
           apm  - Apple Partitoning Map
           gpt  - GUID Partition Table

         The 'partition-table-count' property specifies the number
         of partitions in the partition table. Note that the
         partitions may not be sequentially numbered (e.g.
         it's fine for 'partition-table-count' to report 2
         and 'partition-number' for the associated paritions
         report 1 resp. 4). The property 'partition-table-max-number'
         will contain the maximum value for 'partition-number'
         of any partitions.

         The 'partition-table-offsets' and 'partition-table-sizes'
         properties are arrays indexed by 'partition-number' and
         are of size 'partition-table-max-number'. It may contain
         holes in which case the offset will be 0. -->
    <property name="partition-table-scheme" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The scheme of the partition table. Known values are 'mbr'
            (Master Boot Record), 'apm' (Apple Partition Map) and
            'gpt' (GUID partition table).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition-table">device-is-partition-table</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-table-count" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            Number of partitions in the partition table.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition-table">device-is-partition-table</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-table-max-number" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            The maximum value for
            <doc:ref type="property" to="Device:partition-number">partition-number</doc:ref>
            of the enclosed partitions (partitions may not be sequentially numbered).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition-table">device-is-partition-table</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-table-offsets" type="at" access="read">
      <doc:doc><doc:description><doc:para>
            An array of size
            <doc:ref type="property" to="Device:partition-table-max-number">partition-table-max-number</doc:ref>
            that contains the offsets (in bytes) of each partition.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition-table">device-is-partition-table</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="partition-table-sizes" type="at" access="read">
      <doc:doc><doc:description><doc:para>
            An array of size
            <doc:ref type="property" to="Device:partition-table-max-number">partition-table-max-number</doc:ref>
            that contains the size (in bytes) of each partition.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-partition-table">device-is-partition-table</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- Properties for the drive. The property drive-connection-interface
         specifies the physical connection used to connect the drive (or
         it's enclosure) to the host system.

         (TODO: actually, on Linux, it's hard to get the kernel/driver
         to tell us this; in fact it might not even be possible as the
         device driver itself may not know. Need to investigate this;
         what we want to achieve here is making it easy for end users to
         know what kind of drive to buy when getting a replacement drive.
         And painting a nice icon.)

         Known values for drive-connection-interface include

          virtual            - a virtual device such as a software
                               RAID array or LVM device
          ata                - connected via ATA (PATA)
          ata_serial         - connected via Serial ATA (SATA)
          ata_serial_esata   - connected via External Serial ATA (eSATA)
          ata_parallel       - connected via Parallel ATA
          scsi               - connected via SCSI
          usb                - connected via USB
          firewire           - connected via Firewire

         The property drive-connection-speed specifies the nominal
         maximum speed of the interface in bits/s; if unknown this
         is set to 0.

         The drive-media-compatibility property specifies what kind of
         media can be used in the drive (it's an array of strings); this is
         sometimes set using quirk files if the hardware isn't capable of
         precisely reporting it. The property drive-media specifies the
         current type of media in the drive.

         Known values for drive-media-compatibility and drive-media include

           flash
           flash_cf
           flash_ms
           flash_sm
           flash_sd
           flash_sdhc
           flash_mmc
           floppy
           floppy_zip
           floppy_jaz
           optical
           optical_cd
           optical_cd_r
           optical_cd_rw
           optical_dvd
           optical_dvd_r
           optical_dvd_rw
           optical_dvd_ram
           optical_dvd_plus_r
           optical_dvd_plus_rw
           optical_dvd_plus_r_dl
           optical_dvd_plus_rw_dl
           optical_bd
           optical_bd_r
           optical_bd_re
           optical_hddvd
           optical_hddvd_r
           optical_hddvd_rw
           optical_mo
           optical_mrw
           optical_mrw_w

      -->
    <property name="drive-vendor" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            Name of the vendor of the drive.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-model" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            Name of the model of the drive.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-revision" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            Revision of the drive.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-serial" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The serial number of the drive or blank if unknown.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-connection-interface" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The interface through which the drive is connected. Known values include
            virtual (for e.g. Software RAID), ata, ata_serial, ata_serial_esata, ata_parallel,
            scsi, usb, firewire.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-connection-speed" type="t" access="read">
      <doc:doc><doc:description><doc:para> 
            The nominal speed of the connection interface in bits per
            second. If unknown this property is set to 0.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-media-compatibility" type="as" access="read">
      <doc:doc><doc:description><doc:para>
            An array of media types that can be used in the
            drive. This property is sometimes set using quirk files if
            the hardware isn't capable of precisely reporting it.
            Known values include:
            flash,
            flash_cf,
            flash_ms,
            flash_sm,
            flash_sd,
            flash_sdhc,
            flash_mmc,
            floppy,
            floppy_zip,
            floppy_jaz,
            optical,
            optical_cd,
            optical_cd_r,
            optical_cd_rw,
            optical_dvd,
            optical_dvd_r,
            optical_dvd_rw,
            optical_dvd_ram,
            optical_dvd_plus_r,
            optical_dvd_plus_rw,
            optical_dvd_plus_r_dl,
            optical_dvd_plus_rw_dl,
            optical_bd,
            optical_bd_r,
            optical_bd_re,
            optical_hddvd,
            optical_hddvd_r,
            optical_hddvd_rw,
            optical_mo,
            optical_mrw,
            optical_mrw_w.
          </doc:para><doc:para>
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="drive-media" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The type of media currently in the drive (blank if no media is available). Known
            values include the ones listed for the
            <doc:ref type="property" to="Device:drive-media-compatibility">drive-media-compatibility</doc:ref>
            property.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-drive">device-is-drive</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- The device is a component of a Linux MD (Software RAID) array;
         see property device-is-linux-md-component
      -->
    <property name="linux-md-component-level" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The RAID level of the array the component is part of. Known values include
            raid0,
            raid1,
            raid4,
            raid5,
            raid10,
            linear.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-component-num-raid-devices" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            The number of component devices in the array the component is part of.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-component-uuid" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The UUID of the array the component is part of.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-component-name" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The name of the array the component is part of. Blank if the array
            doesn't have a name (e.g. pre-1.0 meta data).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-component-version" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The version of superblock of the component.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-component-update-time" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            The update time in the superblock of the component.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-component-events" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            The events counter in the superblock of the component.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md-component">device-is-linux-md-component</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>

    <!-- The device is a Linux MD (Software RAID) array. The components
         of the array are in the linux-md-slaves property. The state
         of each slave is in linux-md-slaves-state. The state can be

            in_sync            - component is an active part of
                                 the array
            sync_in_progress   - component is being synced with
                                 the rest of the array
            spare              - component is a hot spare

         The property linux-md-sync-action represents if an operation
         is currently pending on the array and, if so, what the operation
         is
            idle      - no operation pending
            reshape   - a reshape of the array is in progress
            resync    - redundancy is being calculated
            repair    - a repair operation is in progress
            recover   - a hot spare is being built to replace a
                        failed/missing device

         If not 'idle' then the percentage (a number between 0 and
         and 100) as well as speed (the sync speed in bytes/second)
         are updated from time to time.
      -->
    <property name="linux-md-level" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The RAID level of the array. Known values include
            raid0,
            raid1,
            raid4,
            raid5,
            raid10,
            linear.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-num-raid-devices" type="i" access="read">
      <doc:doc><doc:description><doc:para>
            Number of component devices in the array.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-version" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            Metadata version used in the components.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-slaves" type="ao" access="read">
      <doc:doc><doc:description><doc:para>
            An array of object paths for components currently part of the array.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-slaves-state" type="as" access="read">
      <doc:doc><doc:description><doc:para>
            Records the state of each component in the array
            <doc:ref type="property" to="Device:linux-md-slaves">linux-md-slaves</doc:ref>.
            The value can be in_sync (component is an active part of the array),
            sync_in_progress (component is currently being synced with the array),
            and spare (component is a hot spare).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-is-degraded" type="b" access="read">
      <doc:doc><doc:description><doc:para>
            TRUE only if the array is running in degraded mode.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-sync-action" type="s" access="read">
      <doc:doc><doc:description><doc:para>
            The operation currently pending on the array. Known values
            include idle (no operation is pending), reshape (a reshape is in progress),
            resync (redudancy is being calculated), repair (a repair operation is in progress),
            and recover (a hot spare is being built to replace a failed/missing device).
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE.
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-sync-percentage" type="d" access="read">
      <doc:doc><doc:description><doc:para>
            The progress of the current sync operation.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE and
            <doc:ref type="property" to="Device:linux-md-sync">linux-md-sync-action</doc:ref>
            is not "idle".
      </doc:para></doc:description></doc:doc>
    </property>
    <property name="linux-md-sync-speed" type="t" access="read">
      <doc:doc><doc:description><doc:para>
            The speed of the sync operation in bytes per second.
            This property is only valid if
            <doc:ref type="property" to="Device:device-is-linux-md">device-is-linux-md</doc:ref>
            is TRUE and
            <doc:ref type="property" to="Device:linux-md-sync">linux-md-sync-action</doc:ref>
            is not "idle".
      </doc:para></doc:description></doc:doc>
    </property>

  </interface>

</node>
