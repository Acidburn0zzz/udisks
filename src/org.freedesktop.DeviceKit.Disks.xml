<!DOCTYPE node PUBLIC
"-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node name="/">

  <interface name="org.freedesktop.DeviceKit.Disks">

    <!-- Keep the daemon from exiting on inactivity; this is useful for
         automounters that wants the daemon around to keep polling devices -->
    <method name="InhibitShutdown">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="cookie" direction="out" type="s"/>
    </method>

    <!-- Allow the daemon from exiting when inactive -->
    <method name="UninhibitShutdown">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="cookie" direction="in" type="s"/>
    </method>

    <!-- Enumerate all devices -->
    <method name="EnumerateDevices">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="devices" direction="out" type="ao"/>
    </method>

    <!-- Find device by device file -->
    <method name="FindDeviceByDeviceFile">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="device_file" direction="in" type="s"/>
      <arg name="device" direction="out" type="o"/>
    </method>

    <!-- AssembleLinuxMdArray:

         @components: An array of components of the array.

         @options:    Options for assembling the array. Currently
                      this is unused, no options are supported.

         Assembles a Linux md RAID array.

         Returns: The object path of the assembled array.
      -->
    <method name="AssembleLinuxMdArray">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="components" direction="in" type="ao"/>
      <arg name="options" direction="in" type="as"/>

      <arg name="device" direction="out" type="o"/>
    </method>

    <!-- A device was added -->
    <signal name="DeviceAdded">
      <arg name="device" type="o"/>
    </signal>

    <!-- A device was removed -->
    <signal name="DeviceRemoved">
      <arg name="device" type="o"/>
    </signal>

    <!-- A device was changed -->
    <signal name="DeviceChanged">
      <arg name="device" type="o"/>
    </signal>

    <!-- Job state on a device was changed -->
    <signal name="DeviceJobChanged">
      <arg name="device" type="o"/>
      <arg name="job-in-progress" type="b"/>
      <arg name="job-is-cancellable" type="b"/>
      <arg name="job-id" type="s"/>
      <arg name="job-num-tasks" type="i"/>
      <arg name="job-cur-task" type="i"/>
      <arg name="job-cur-task-id" type="s"/>
      <arg name="job-cur-task-percentage" type="d"/>
    </signal>

  </interface>

</node>
